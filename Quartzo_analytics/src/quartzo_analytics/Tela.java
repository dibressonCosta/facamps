package quartzo_analytics;

import java.awt.Color;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.StringTokenizer;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.NumberTickUnit;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.XYPlot;
import org.jfree.data.xy.XYDataset;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;

/**
 *
 * @author 201810622
 */
public class Tela extends javax.swing.JFrame {

    /**
     * Creates new form Tela
     */
    public Tela() {
        initComponents();
        jScrollPane3.setVisible(false);
        jScrollPane4.setVisible(false);
        tipo.setVisible(false);
        r_tipo.setVisible(false);
        resultado.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    int contid = 0;

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane3 = new javax.swing.JTabbedPane();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        nometabela = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        nome = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        quantidade = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tab1 = new javax.swing.JTable();
        salvarTab = new javax.swing.JButton();
        inDados = new javax.swing.JButton();
        clearDados = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        procurar_end = new javax.swing.JTextField();
        Procurar = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jComboBox4 = new javax.swing.JComboBox<>();
        carregar = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        tipodatabela = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tab3 = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        tab5 = new javax.swing.JTable();
        tipo = new javax.swing.JLabel();
        r_tipo = new javax.swing.JTextField();
        resultado = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tab2 = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        r_mediana = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        r_media = new javax.swing.JTextField();
        r_moda = new javax.swing.JTextField();
        r_variacao = new javax.swing.JTextField();
        r_assimetria = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        r_cv = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        r_desvio = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Nome da tabela :");

        jLabel2.setText("Nome :");

        jLabel3.setText("Dado :");

        tab1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Dados", "Quantidade"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tab1.setAutoscrolls(false);
        jScrollPane1.setViewportView(tab1);
        if (tab1.getColumnModel().getColumnCount() > 0) {
            tab1.getColumnModel().getColumn(0).setResizable(false);
            tab1.getColumnModel().getColumn(1).setResizable(false);
        }

        salvarTab.setText("Salvar tabela");
        salvarTab.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarTabActionPerformed(evt);
            }
        });

        inDados.setText("Inserir dados");
        inDados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inDadosActionPerformed(evt);
            }
        });

        clearDados.setText("Limpar Campo");
        clearDados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearDadosActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { ";", "|", "," }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel4.setText("Delimitador : ");

        jLabel14.setText("Caminho do arquivo : ");

        Procurar.setText("Procurar");
        Procurar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProcurarActionPerformed(evt);
            }
        });

        jLabel15.setText("Delimitador : ");

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { ";", "|", "," }));
        jComboBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox4ActionPerformed(evt);
            }
        });

        carregar.setText("Carregar");
        carregar.setEnabled(false);
        carregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                carregarActionPerformed(evt);
            }
        });

        jLabel16.setText("Salvar arquivo");

        jLabel17.setText("Inserir dados");

        jLabel18.setText("Procurar dados");

        tipodatabela.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tabela de Nomes", "Tabela de Frequências", "Tabela Importada" }));
        tipodatabela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipodatabelaActionPerformed(evt);
            }
        });

        jLabel5.setText("Tipo : ");

        tab3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Dados", "Frequência"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tab3.setAutoscrolls(false);
        tab3.setShowVerticalLines(false);
        jScrollPane3.setViewportView(tab3);
        if (tab3.getColumnModel().getColumnCount() > 0) {
            tab3.getColumnModel().getColumn(0).setResizable(false);
            tab3.getColumnModel().getColumn(1).setResizable(false);
        }

        tab5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane4.setViewportView(tab5);

        tipo.setText("Tipo");

        resultado.setText("Resultados");
        resultado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resultadoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel5))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(nome, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(quantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(inDados)
                                .addGap(28, 28, 28)
                                .addComponent(clearDados)
                                .addGap(86, 86, 86))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(tipodatabela, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(tipo)
                                .addGap(18, 18, 18)
                                .addComponent(r_tipo, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(resultado)
                                .addGap(35, 35, 35))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel18)
                                .addGap(73, 73, 73)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel14)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(procurar_end, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(Procurar))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel15)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(235, 235, 235)
                                        .addComponent(carregar))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(nometabela, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(salvarTab)
                                .addGap(236, 236, 236)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel16))
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 808, Short.MAX_VALUE)
                        .addComponent(jSeparator2))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 808, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(procurar_end, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Procurar)
                    .addComponent(jLabel18))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(carregar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 7, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel17)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(nome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3)
                        .addComponent(quantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(inDados)
                        .addComponent(clearDados)))
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tipodatabela, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(resultado)
                    .addComponent(r_tipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tipo))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4)
                        .addComponent(salvarTab))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(nometabela, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Leitura dos dados", jPanel1);

        tab2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Dados", "Frequência"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tab2);
        if (tab2.getColumnModel().getColumnCount() > 0) {
            tab2.getColumnModel().getColumn(0).setResizable(false);
            tab2.getColumnModel().getColumn(1).setResizable(false);
        }

        jLabel9.setText("Mediana:");

        r_mediana.setEditable(false);
        r_mediana.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r_medianaActionPerformed(evt);
            }
        });

        jLabel10.setText("coeficiente-de-assimetria :");

        jLabel8.setText("Moda:");

        jLabel13.setText("Analise de variação : ");

        jLabel7.setText("Média:");

        r_media.setEditable(false);

        r_moda.setEditable(false);

        r_variacao.setEditable(false);
        r_variacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r_variacaoActionPerformed(evt);
            }
        });

        r_assimetria.setEditable(false);

        jLabel11.setText("Coeficiente de variacao");

        r_cv.setEditable(false);

        jLabel12.setText("Desvio Padrão : ");

        r_desvio.setEditable(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 820, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(r_media, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(r_mediana, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
                    .addComponent(r_moda))
                .addGap(37, 37, 37)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addGap(28, 28, 28)
                        .addComponent(r_variacao, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(r_assimetria))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(r_desvio, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(r_cv, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(r_mediana, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(r_variacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(r_assimetria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel12)
                        .addComponent(r_desvio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(r_media, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(r_moda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel8))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel11)
                        .addComponent(r_cv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(141, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Calculo", jPanel2);

        jPanel3.setBackground(new java.awt.Color(204, 204, 204));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 830, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 462, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Gráficos", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void carregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_carregarActionPerformed
        String delimitador02 = String.valueOf(jComboBox4.getSelectedItem());
        try {
            if (file == null) {
                throw new Exception("Nenhum arquivo escolhido");
            } else {
                StringTokenizer tokenizer;
                FileReader fileReader = new FileReader(file);
                BufferedReader reader = new BufferedReader(fileReader);
                String line = reader.readLine();
                int colunas = 0;
                if (line != null) {
                    tokenizer = new StringTokenizer(line, delimitador02);
                    colunas = tokenizer.countTokens();
                    String[] cabecalho = new String[colunas];
                    for (int i = 0; i < colunas; i++) {
                        cabecalho[i] = tokenizer.nextToken();
                    }
                    tableModel = new DefaultTableModel(cabecalho, 0);
                    tab5.setModel(tableModel);
                    r_media = null;
                    r_mediana = null;
                    r_moda = null;
                    r_assimetria = null;
                    r_desvio = null;
                    r_variacao = null;
                    r_assimetria = null;
                    jPanel1.remove(chartPanel);

                }
                line = reader.readLine();
                while (line != null) {
                    tokenizer = new StringTokenizer(line, delimitador02);
                    String[] linha = new String[colunas];
                    for (int i = 0; tokenizer.hasMoreTokens(); i++) {
                        linha[i] = tokenizer.nextToken();
                    }
                    tableModel.addRow(linha);
                    line = reader.readLine();

                }
                reader.close();
                fileReader.close();
                tipo.setVisible(true);
                r_tipo.setVisible(true);
                resultado.setVisible(true);

            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "ERRO", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_carregarActionPerformed
    DefaultTableModel tableModel;

    public void get_dados(int select_col) {
        DadosList = new ArrayList<>();
        double[] dados = new double[tableModel.getRowCount()];

        for (int i = 0; i < tableModel.getRowCount(); i++) {
            dados[i] = new Double(tableModel.getValueAt(i, select_col).toString().replace(',', '.'));
            DadosList.add(dados[i]);

        }

    }
    //seleciona coluna

    int get_col() {
        try {
            int col;
            int colunas;
            String delimitador02 = String.valueOf(jComboBox4.getSelectedItem());
            FileReader fileReader = new FileReader(file);
            BufferedReader reader = new BufferedReader(fileReader);
            String line = reader.readLine();
            // String texto = jTextField11.getText();
            StringTokenizer tokenizer;
            tokenizer = new StringTokenizer(line, delimitador02);
            colunas = tokenizer.countTokens();
            String[] cabecalho = new String[colunas];

            for (int i = 0; i < colunas; i++) {
                cabecalho[i] = tokenizer.nextToken();
                if ((cabecalho[i]).equals("Frequência")) { //seleciona o numero da coluna digitada
                    col = i;
                    return col;
                }
                if (cabecalho[i].equals("Quântidade") || cabecalho[i].equals("quântidade") || cabecalho[i].equals("qtd")) {
                    qtd = true;
                    qtdcol = i;
                }
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "ERRO", JOptionPane.ERROR_MESSAGE);
        }
        return 0;

    }
    private void jComboBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox4ActionPerformed

    private void ProcurarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProcurarActionPerformed
        JFileChooser chooser = new JFileChooser();
        try {
            int returnVal = chooser.showOpenDialog(this);
            if (returnVal == JFileChooser.APPROVE_OPTION) {
                file = chooser.getSelectedFile();
                procurar_end.setText(file.getCanonicalPath());
                carregar.setEnabled(true);
            } else {
                throw new Exception("Operação cancelada!");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "ERRO", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_ProcurarActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed

    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void clearDadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearDadosActionPerformed
        nome.setText("");
        quantidade.setText("");
    }//GEN-LAST:event_clearDadosActionPerformed

    double[] valores = new double[1000];
    int position = 0;
    double[][] freq;
    double[][] freqArred;
    boolean qtd = false; //se a tabela tem a coluna quantidade
    int qtdcol;          //qual o indice da coluna quantidade 
    int qtddados;        //quantos dados tem
    File file;
    public static List<Double> DadosList;

    public double arredondar(double a, int b) {
        double x = ((int) (a * Math.pow(10, b))) / Math.pow(10, b);
        return x;
    }

    private void inDadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inDadosActionPerformed

        String dado1 = nome.getText();
        String qtd = quantidade.getText();

        if (chartPanel != null) {
            jPanel1.remove(chartPanel);
        }

        if (dado1.isEmpty()) {
            dado1 = "-";
        }
        try {
            if (quantidade.getText().equals("")) {
                throw new Exception("Preencha todos os campos");
            }

            Integer.parseInt(quantidade.getText());

            DefaultTableModel deleteAux2 = (DefaultTableModel) tab2.getModel();
            deleteAux2.setRowCount(0);

            DefaultTableModel deleteAux3 = (DefaultTableModel) tab3.getModel();
            deleteAux3.setRowCount(0);

            valores[position] = Double.parseDouble(quantidade.getText());
            String linha[] = {dado1, qtd};
            ((DefaultTableModel) tab1.getModel()).addRow(linha);
            ((DefaultTableModel) tab5.getModel()).addRow(linha);

            freq = Tend_central.freq(valores, position);

            for (int i = 0; i < freq.length; i++) {
                String linhaFreq[] = {Double.toString(freq[i][0]), Double.toString(freq[i][1])};
                ((DefaultTableModel) tab3.getModel()).addRow(linhaFreq);
                ((DefaultTableModel) tab2.getModel()).addRow(linhaFreq);
            }
            freqArred = Tend_central.freqArredondar(valores, position);
            position++;
            String mediana1[] = {Double.toString(arredondar(Tend_central.Mediana(valores, position), 2))};
            r_mediana.setText(mediana1[0]);

            String media1[] = {Double.toString(arredondar(Tend_central.Media(valores, position), 2))};
            r_media.setText(media1[0]);

            String DesvioPadrao[] = {Double.toString(arredondar(Tend_central.DesvioPadrao(valores, position), 2))};
            r_desvio.setText(DesvioPadrao[0]);

            String Coeficiente_de_variacao[] = {Double.toString(arredondar(Tend_central.Coeficiente_de_variacao(valores, position), 2))};
            r_cv.setText(Coeficiente_de_variacao[0]);

            String moda = Tend_import.moda(freq);
            r_moda.setText(moda);
            double eixoX[] = new double[freqArred.length];
            double eixoY[] = new double[freqArred.length];
            for (int i = 0; i < freqArred.length; i++) {
                eixoX[i] = freqArred[i][0];
                eixoY[i] = freqArred[i][1];
            }

            jPanel3.setLayout(new java.awt.BorderLayout());
            criarGrafico(eixoX, eixoY);
            jPanel3.validate();
            jPanel3.repaint();

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this,
                    "Digite somente numeros validos",
                    "Mensagem de erro !",
                    WIDTH);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this,
                    e.getMessage(),
                    "Mensagem de erro !",
                    JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_inDadosActionPerformed
    ChartPanel chartPanel;

    private void criarGrafico(double eixoX[], double eixoY[]) {
        try {
//Instância da classe apropriada do JFreeChart
            JFreeChart chart = ChartFactory.createXYLineChart(
                    "Gráfico : Polígono de Frequências",
                    "Valores X(i)",
                    "Frquências f(i)",
                    createXYDataset(eixoX, eixoY),
                    PlotOrientation.VERTICAL,
                    true,
                    true,
                    false
            );
//Algumas customizações (cores)
            chart.setBackgroundPaint(Color.white);
            XYPlot plot = chart.getXYPlot();
            plot.setBackgroundPaint(Color.lightGray);
            plot.setDomainGridlinePaint(Color.white);
            plot.setRangeGridlinePaint(Color.white);
//Configuração dos eixos e escalas
//            NumberAxis axis = (NumberAxis) plot.getDomainAxis();
//            axis.setTickUnit(new NumberTickUnit(1));
//Criação do painel do gráfico e inserção no painel (jPainel1) da janela
            chartPanel = new ChartPanel(chart);
            chartPanel.setPreferredSize(jPanel3.getSize());
            jPanel3.removeAll();
            jPanel3.add(chartPanel, java.awt.BorderLayout.CENTER);
            this.getContentPane().validate();
            this.getContentPane().repaint();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(),
                    "ERRO", JOptionPane.ERROR_MESSAGE);
        }
    }

    private XYDataset createXYDataset(double eixoX[], double eixoY[]) {
        XYSeriesCollection dataset = new XYSeriesCollection();
        XYSeries serie = new XYSeries("");
//Inserir o conjunto de valores, um para cada linha da tabela. Ex.:
        int n = eixoX.length;
        for (int i = 0; i < n; i++) {
            serie.add(eixoX[i], eixoY[i]);
        }
//Adicionar a série ao dataset e retornar
        dataset.addSeries(serie);
        return dataset;
    }

//    public static final String DELIMITADOR = ";";
    // int DELIMITADOR = (int) jComboBox1.getSelectedItem();

    private void salvarTabActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarTabActionPerformed

        String DELIMITADOR = String.valueOf(jComboBox1.getSelectedItem());
        try {
            if (tab3.getRowCount() <= 1 && tab3.getColumnCount() <= 1) {
                throw new Exception("Tabela vazia");
            }
            if (nometabela.getText().equals("")) {
                throw new Exception("Coloque um nome para a tabela");
            }
            FileWriter fw = new FileWriter(System.getProperty("user.dir") + "-" + nometabela.getText() + ".csv");
            StringBuilder builder = new StringBuilder();

            builder.append("Dados");
            builder.append(DELIMITADOR);
            builder.append("Frequência");
            builder.append("\n");
            for (int i = 0; i < tab3.getRowCount(); i++) {
                builder.append(tab3.getValueAt(i, 0));
                builder.append(DELIMITADOR);
                builder.append(tab3.getValueAt(i, 1));
                builder.append("\n");
            }
            fw.write(builder.toString());
            fw.flush();
            fw.close();
            JOptionPane.showMessageDialog(this,
                    "Arquivo salvo como tabela de frequência com Sucesso ! " + "\n" + "Local : " + System.getProperty("user.dir") + "-" + nometabela.getText() + ".csv",
                    "Arquivo salvo!",
                    WIDTH);
        } catch (IOException ex) {
            System.out.println(ex.getMessage());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this,
                    e.getMessage(),
                    "Mensagem de erro !",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_salvarTabActionPerformed

    private void r_variacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r_variacaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_r_variacaoActionPerformed

    private void tipodatabelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipodatabelaActionPerformed
        // TODO add your handling code here:
        String tipoTabela = (String) tipodatabela.getSelectedItem();
        if (tipoTabela.equalsIgnoreCase("Tabela de Frequências")) {
            jScrollPane1.setViewportView(tab3);
        }
        if (tipoTabela.equalsIgnoreCase("Tabela de Nomes")) {
            jScrollPane1.setViewportView(tab1);
        }
        if (tipoTabela.equalsIgnoreCase("Tabela Importada")) {
            jScrollPane1.setViewportView(tab5);
        }
    }//GEN-LAST:event_tipodatabelaActionPerformed

    private void resultadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resultadoActionPerformed

        try {
            if (r_tipo.equals(null)) {
                throw new Exception("Nenhuma coluna escolhida");
            } else {

                FileReader fileReader = new FileReader(file);
                BufferedReader reader = new BufferedReader(fileReader);
                String line = reader.readLine();

                int select_col;
                if (line != null) {
                    select_col = get_col(); //chama get_coluna -> seleciona a coluna 
                    //digitada armazena em select_col
                    get_dados(select_col);
                    r_media.setText(Double.toString(Tend_import.media()));
                    // r_moda.setText(Double.toString(Tend_import.moda()));
                    r_mediana.setText(Double.toString(Tend_import.mediana()));
                    //jTextField9.setText(Assimetria.assimetria());
                    // jTextField12.setText(Double.toString(Dispersao.dispersao()));

                }
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "ERRO", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_resultadoActionPerformed

    private void r_medianaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r_medianaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_r_medianaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tela().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Procurar;
    private javax.swing.JButton carregar;
    private javax.swing.JButton clearDados;
    private javax.swing.JButton inDados;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JTextField nome;
    private javax.swing.JTextField nometabela;
    private javax.swing.JTextField procurar_end;
    private javax.swing.JTextField quantidade;
    private javax.swing.JTextField r_assimetria;
    private javax.swing.JTextField r_cv;
    private javax.swing.JTextField r_desvio;
    private javax.swing.JTextField r_media;
    private javax.swing.JTextField r_mediana;
    private javax.swing.JTextField r_moda;
    private javax.swing.JTextField r_tipo;
    private javax.swing.JTextField r_variacao;
    private javax.swing.JButton resultado;
    private javax.swing.JButton salvarTab;
    private javax.swing.JTable tab1;
    private javax.swing.JTable tab2;
    private javax.swing.JTable tab3;
    private javax.swing.JTable tab5;
    private javax.swing.JLabel tipo;
    private javax.swing.JComboBox<String> tipodatabela;
    // End of variables declaration//GEN-END:variables
}
